# embedded derby jdbc properties
#jdbcDriver=org.apache.derby.jdbc.EmbeddedDriver
# this one has to be changed to point to a local directory on your system
#jdbcUrl=jdbc:derby:/Users/kevinagary/work/asu/classes/ser422/spring2016/code/ser422_spring2016/booktown/derby_home/booktowndb
# PostgreSQL
jdbcDriver=org.postgresql.Driver
jdbcUrl=jdbc:postgresql://localhost:5432/booktownrest
#IMPORTANT: edit the below code to obtain access to postgres database
jdbcUser=postgres
jdbcPasswd=!1q
# MySQL
#jdbcDriver=com.mysql.jdbc.Driver
#jdbcUrl=jdbc:mysql://localhost/btown_rest
#jdbcUser=root
#jdbcPasswd=root

# We don't want SQL embedded in our code, so one technique is to externalize them from the code using a SQL Wrapping
# framework like iBatis, or to simply do it low-tech by putting the queries in this property file
#TODO correct/finish/test queries
sql.getAuthors=select id, last_name, first_name from Authors
sql.getAuthor=select id, last_name, first_name from Authors where id=?
sql.createAuthor=INSERT INTO Authors (id, last_name, first_name) VALUES (?,?,?)
sql.deleteAuthor=DELETE FROM Authors WHERE id = ?
sql.updateAuthor=UPDATE Authors set last_name=?, first_name=? WHERE id=?
#TODO:Needed?
sql.removeAuthorRefFromBook=UPDATE Books SET author_id=NULL WHERE author_id=?;

sql.getBooks=select id, title, author_id, subject_id from Books
sql.getBook=select id, title, author_id, subject_id from Books where id=?
sql.createBook=INSERT INTO Books (id, title, author_id, subject_id) VALUES (?,?,?)
sql.deleteBook=DELETE FROM Books WHERE id = ?
  #TODO:Test this. deleteBook not in interface, but extended in RDBMBooktownServiceImpl
sql.updateBook=UPDATE Books set title=?, author_id=?, subject_id=? WHERE id=?
#needed?
#sql.removeBookRefFromSubject=UPDATE Subjects SET !?!?>author_id=NULL WHERE author_id=?;

sql.getSubjects=select id, subject, location from Subjects
sql.getSubject=select id, subject, location from Subjects where id=?
sql.createSubject=INSERT INTO Subjects (id, subject, location) VALUES (?,?,?)
sql.deleteSubject=DELETE FROM Subjects WHERE id = ?
sql.removeSubjectRefFromBook=UPDATE Books SET subject_id=NULL WHERE subject_id=?;
sql.updateSubject=UPDATE Subjects set subject=?, location=? WHERE id=?


#
#CREATE TABLE authors (
#    id integer NOT NULL,
#    last_name text,
#    first_name text
#);

#CREATE TABLE books (
#    id integer NOT NULL,
#    title text NOT NULL,
#    author_id integer,
#    subject_id integer
#);

#CREATE TABLE subjects (
#    id integer NOT NULL,
#    subject text,
#    "location" text
#);
